---
- name: Check root password
  ansible.builtin.set_fact:
    basic: |
      {% set mybasic = basic | default({ 'data': {} }) %}
      {% set _ = mybasic.data.update({ 'root_password': basic_root_password }) %}
      {% set _ = mybasic.update({ 'changed': true }) %}
      {{ mybasic }}
      #  no_log: true
  when: basic.data.root_password is not defined or basic.data.root_password != basic_root_password

- name: Set root password
  ansible.builtin.user:
    name: root
    password: "{{ basic.data.root_password | password_hash('sha512') }}"
  when: basic is changed

- name: Check ansible password
  ansible.builtin.set_fact:
    basic: |
      {% set mybasic = basic | default({ 'data': {} }) %}
      {% set _ = mybasic.data.update({ 'ansible_password': basic_ansible_password }) %}
      {% set _ = mybasic.update({ 'changed': true }) %}
      {{ mybasic }}
  no_log: true
  when: basic.data.ansible_password is not defined or basic.data.ansible_password != basic_ansible_password

- name: Create ansible user
  ansible.builtin.user:
    name: "{{ basic_ansible_user }}"
    shell: /bin/bash
    state: present
    create_home: yes
    system: yes
    password: "{{ basic_ansible_password | password_hash('sha512') }}"
  when: basic is changed

- name: Set become_password
  ansible.builtin.set_fact:
    ansible_become_password: "{{ basic_ansible_password }}"
  when: ansible_facts['user_id'] == basic_ansible_user
  become: false

- name: Allow sudo for the ansible user
  ansible.builtin.lineinfile:
    path: "/etc/sudoers.d/{{ basic_ansible_user }}"
    state: present
    line: '{{ basic_ansible_user }} ALL=(ALL) PASSWD:ALL'
    create: yes
    mode: '0440'
    validate: '/usr/sbin/visudo -cf %s'

- name: Set up authorized keys for ansible user
  ansible.posix.authorized_key:
    user: "{{ basic_ansible_user }}"
    state: present
    key: '{{ item }}'
  loop: "{{ basic_ansible_authorized_keys }}"

- name: Create default user
  ansible.builtin.user:
    name: "{{ basic_default_user }}"
    shell: /bin/bash
    state: present
    create_home: yes

- name: Allow passwordless sudo for the default user
  ansible.builtin.lineinfile:
    path: "/etc/sudoers.d/{{ basic_default_user }}"
    state: present
    line: '{{ basic_default_user }} ALL=(ALL) NOPASSWD:ALL'
    create: yes
    mode: '0440'
    validate: '/usr/sbin/visudo -cf %s'

- name: Set up authorized keys for default user
  ansible.posix.authorized_key:
    user: "{{ basic_default_user }}"
    state: present
    key: '{{ item }}'
  loop: "{{ basic_default_authorized_keys }}"
